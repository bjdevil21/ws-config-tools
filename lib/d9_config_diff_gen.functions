#!/usr/bin/env bash

# HELPER FUNCTIONS

# Help() - Output help docs
function Help {
  # Display Help
  echo ""
  echo "Webspark 2 configuration file diff checker"
  echo ""
  echo "Generates and opens a diff file between the module's current config files and your local D9 dev site's exported "
  echo "config files."
  echo "By default, the diff file are deleted after being opened and viewed."
  echo ""
  echo "Notes:"
  echo "* You MUST configure your options in a corresponding ./etc/d9_config_diff_gen.settings file before using this script."
  echo "* This script currently only checks a project's three possible /config directories. It does not check other YML files"
  echo "  in the root directory or elsewhere in the project."
  echo ""
  echo "Flags (options):"
  echo "  -m - Keep diff and command files for manual review"
  echo "  -g - Interactively verify Git branch status for each project"
  printf "  -r - Re-run Drush export of active configs into ~/%s \n" "${CONF_EXPORT_DIR}"
  echo "  -R - -r plus creates/overwrites second 'starting point' export dir (to compare later for new YML files)"
  echo "  -p - Create an appliable .patch file in ./config for single projects (or the script root for ALL)"
  echo "  -c - Skip Drush check if project is enabled (by default, disabled projects bloat the config diff output)"
  echo "  -V - Verbose output"
  echo "  -z - Extra careful mode"
  echo "  -Z - Extra careful mode (verbose)"
  echo "  -v - Returns version of script"
  echo "  -h - Returns this help message"
  exit 0
}
# Is the project a valid project to check?
# $1 (int) - Directory to be checked
function ProjectVerify {
  if [[ $1 =~ webspark+(-|_)module+(-|_).* || $1 =~ webspark+(-|_)theme+(-|_).* || $1 =~ webspark+(-|_)profile+(-|_).* ]]; then
    echo "true"
  else
    echo "false"
  fi
}
# Prepare active configs directory
# No input params
function PrepConfigDir {
  if [[ -d "${ABS_CONF_EXPORT_DIR}" ]]; then
    find "${ABS_CONF_EXPORT_DIR}" -type f -not -name "*.yml" -exec rm {} \; # Delete non-YML files from config dir
    YML_COUNT=$(find "${ABS_CONF_EXPORT_DIR}" -type f -name "*.yml" 2>/dev/null | wc -l)
    if [[ ${YML_COUNT} != 0 ]]; then
      if [[ ${RERUN_EXPORT} == 1 ]]; then
        Verbose "Emptying %s directory..." "${ABS_CONF_EXPORT_DIR}"
        rm "${ABS_CONF_EXPORT_DIR}"/*
        Verbose "DONE.\n"
      fi
    else
      RERUN_EXPORT=1 # Forcing rebuild to populate empty directory
    fi
  else
    Verbose "\nNotice: %s does not exist. Creating directory..." "${ABS_CONF_EXPORT_DIR}"
    mkdir -p "${ABS_CONF_EXPORT_DIR}" || exit 1
    Verbose "DONE.\n"
    if [[ "${RERUN_EXPORT}" == 0 ]]; then
      RERUN_EXPORT=1 # Forcing rebuild to populate directory
    fi
  fi
}
# Resets config directory names/locations
# $1 (int) - Assigned project number from assembled list
# $2 (int) - If 1, output current project messaging
function UpdateConfDirs {
  if [[ $2 == 1 ]]; then
    printf "\n\n%s\n" "$(printf "## Project %d - %s ##" "$1" "${PROJECTS_AVAILABLE[$1]}")"
  fi
  SRC_DIR=${PROJECTS_AVAILABLE[$1]}
  ABS_SRC_DIR=${ABS_PROJECTS_DIR}${SRC_DIR}
}
